"use client"

import { useRouter } from "next/router";
import React, { useState, ChangeEvent, FormEvent } from "react";

export const ExcuseForm = () => {
  const [reason, setReason] = useState<string>("");
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string>("");
  const [roast, setRoast] = useState<string | null>(null);
  
  // ‚≠ê –®–∏–Ω—ç: –®–∞–ª—Ç–≥–∞–∞–Ω –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω —ç—Å—ç—Ö–∏–π–≥ —Ö—è–Ω–∞—Ö
  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);
  // ‚≠ê –®–∏–Ω—ç: –°–µ—Ä–≤–µ—Ä–∏–π–Ω —Ö–∞—Ä–∏—É –º–µ—Å—Å–µ–∂–∏–π–≥ —Ö–∞–¥–≥–∞–ª–∞—Ö (—Ö“Ø–ª—ç—ç–ª–≥–∏–π–Ω —ç—Å–≤—ç–ª –±—É—Å–∞–¥)
  const [statusMessage, setStatusMessage] = useState<string | null>(null);

  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {
    setReason(e.target.value);
  };

  const router = useRouter();
const roomCode = router.query.room;

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError("");
    setRoast(null);
    setIsSubmitted(false); // –ò–ª–≥—ç—ç—Ö—ç—ç—Å ”©–º–Ω”© submitted —Ç”©–ª–≤–∏–π–≥ false –±–æ–ª–≥–æ—Ö
    setStatusMessage(null); // –ú–µ—Å—Å–µ–∂–∏–π–≥ —Ü—ç–≤—ç—Ä–ª—ç—Ö

    try {
      const response = await fetch("http://localhost:4200/roast", { // –¢–∞–Ω—ã API endpoint
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          roomId: 1, 
          reasons: [reason], 
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || "Roast –∞–≤–∞—Ö–∞–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞");
      }
      
      console.log("üî• Roast API response:", data);

      setIsSubmitted(true); // –ê–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω –≥—ç–∂ —Ç—ç–º–¥—ç–≥–ª—ç—Ö
      setReason(""); // –ë–∏—á–∏—Ö —Ö—ç—Å–≥–∏–π–≥ —Ö–æ–æ—Å–ª–æ—Ö

      if (data.roast) {
        setRoast(data.roast); // Roast –∏—Ä—Å—ç–Ω –±–æ–ª —Ö–∞–¥–≥–∞–ª–∞—Ö
        setStatusMessage("Roast –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–ª—ç—ç!"); // –•—ç—Ä—ç–≤ —à—É—É–¥ roast –∏—Ä–≤—ç–ª
      } else if (data.message) {
        setStatusMessage(data.message); // –•“Ø–ª—ç—ç–ª–≥–∏–π–Ω –º–µ—Å—Å–µ–∂ –∏—Ä—Å—ç–Ω –±–æ–ª —Ö–∞–¥–≥–∞–ª–∞—Ö
      } else {
        setStatusMessage("–•–∞—Ä–∏—É –∏—Ä—Å—ç–Ω –±–æ–ª–æ–≤—á, “Ø“Ø–Ω–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö –º–µ—Å—Å–µ–∂ –∞–ª–≥–∞ –±–∞–π–Ω–∞.");
      }

    } catch (err: any) {
      setError(err.message || "–°–µ—Ä–≤–µ—Ä—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ—Ö–æ–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞");
      setIsSubmitted(false); // –ê–ª–¥–∞–∞ –≥–∞—Ä–≤–∞–ª –±—É—Ü–∞–∞–¥ –º–∞—è–≥—Ç—ã–≥ —Ö–∞—Ä—É—É–ª–∞—Ö
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex items-center justify-center p-6">
      <div className="bg-white p-6 rounded-xl shadow-md w-full max-w-md">
        {/* ‚≠ê –®–∏–Ω—ç: –•—ç—Ä—ç–≤ –∏–ª–≥—ç—ç–≥–¥—ç—ç–≥“Ø–π –±–æ–ª –º–∞—è–≥—Ç—ã–≥ —Ö–∞—Ä—É—É–ª–Ω–∞ */}
        {!isSubmitted ? (
          <form onSubmit={handleSubmit} className="space-y-4">
            <textarea
              className="w-full p-3 border rounded-xl resize-none h-24"
              placeholder="–Ø–∞–≥–∞–∞–¥ –º”©–Ω–≥”© —Ç”©–ª”©—Ö–≥“Ø–π –±–∞–π–≥–∞–∞ —à–∞–ª—Ç–≥–∞–∞–Ω–∞–∞ –±–∏—á..."
              value={reason}
              onChange={handleChange}
              required
              disabled={loading}
            />
            <button
              type="submit"
              disabled={loading || !reason.trim()}
              className="w-full bg-blue-500 text-white py-2 rounded-xl hover:bg-blue-600"
            >
              {loading ? "–ò–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞..." : "–®–∞–ª—Ç–≥–∞–∞–Ω–∞–∞ –∏–ª–≥—ç—ç—Ö"}
            </button>
            {error && <p className="text-red-600 text-center">{error}</p>}
          </form>
        ) : (
          // ‚≠ê –®–∏–Ω—ç: –ò–ª–≥—ç—ç–≥–¥—Å—ç–Ω –±–æ–ª —Å—Ç–∞—Ç—É—Å –±–æ–ª–æ–Ω roast-–≥ —Ö–∞—Ä—É—É–ª–Ω–∞
          <div className="text-center">
            {statusMessage && (
              <p className="text-blue-600 font-semibold mb-4">{statusMessage}</p>
            )}
            {roast && (
              <div className="mt-4 bg-yellow-50 border border-yellow-300 p-4 rounded-xl shadow">
                <h3 className="text-lg font-bold text-yellow-800 mb-2">
                  ü§ñ AI Roast:
                </h3>
                <p className="italic text-gray-800">"{roast}"</p>
              </div>
            )}
          
          </div>
        )}
      </div>
    </div>
  );
};
